name: Frontend Integration Continue ðŸš€

on:
  push:
    branches:
      - main
    paths:
      - 'front/**'
  pull_request:
    branches:
      - main
    paths:
      - 'front/**'
    types: [opened, synchronize, reopened]

jobs:
  frontend-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: front

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      # ExÃ©cuter les tests avec couverture sans interface graphique
      - name: Run tests with coverage
        run: npm test -- --watch=false --browsers=ChromeHeadless

      # TÃ©lÃ©charge le rapport de couverture des tests
      - name: Upload test coverage report
        uses: actions/upload-artifact@v4
        with:
          name: bobapp-front-coverage
          path: front/coverage/bobapp

  frontend-SonarCloud:
    name: frontend - Analyse avec SonarCloud
    runs-on: ubuntu-latest
    needs: [ frontend-test ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache npm packages
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-npm

      - name: Install dependencies
        run: |
          cd front
          npm install

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        with:
          projectBaseDir: front
          args: >
            -Dsonar.projectKey=Arthurl35_Gerez-un-projet-collaboratif-en-int-grant-une-demarche-CI-CD_front
            -Dsonar.organization=arthurl35
            -Dsonar.sources=src
            -Dsonar.exclusions=src/polyfills.ts
            -Dsonar.tests=src
            -Dsonar.test.inclusions=src/**/*.spec.ts,src/test/**,src/**/*Test.java
            -Dsonar.javascript.lcov.reportPaths=coverage/bobapp/lcov.info
            -Dsonar.sourceEncoding=UTF-8
            -Dsonar.branch.name=main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  docker-build-push:
    name: Build and Push Docker Image for Frontend
    runs-on: ubuntu-latest
    needs: [ frontend-SonarCloud ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push frontend Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./front
          file: ./front/Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/bobapp-frontend:${{ github.sha }}
