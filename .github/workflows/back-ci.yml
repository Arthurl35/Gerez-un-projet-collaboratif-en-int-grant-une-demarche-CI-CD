name: Backend Integration Continue üöÄ

# D√©crire les √©v√©nements qui d√©clenchent le workflow
on:
  push:
    branches:
      - main
    paths:
      - 'back/**'
  pull_request:
    branches:
      - main
    paths:
      - 'back/**'
    types: [opened, synchronize, reopened]

jobs:
  backend-test:
    runs-on: ubuntu-latest # Environnement d'ex√©cution
    defaults:
      run:
        working-directory: back # Lancer le job dans le r√©pertoire back

    steps:
      # R√©cup√®re le code source et les actions de github actions
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'
          cache: 'maven'

      - name: Install dependencies
        run: mvn clean install

      - name: Run tests
        run: mvn test

      - name: Generate coverage report
        run: mvn jacoco:report

      # T√©l√©charge le rapport de couverture des tests
      - name: Upload test coverage report
        uses: actions/upload-artifact@v4
        with:
          name: bobapp-back-coverage
          path: back/target/site/jacoco

  backend-SonarCloud:
    name: backend - Analyse avec SonarCloud
    runs-on: ubuntu-latest
    needs: [ backend-test ] # Ex√©cuter le job apr√®s la validation du job pr√©c√©dent

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Fetch all branches
        run: git fetch --all

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu'

      # Mise en cache des paquets SonarCloud
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      # Mise en cache des d√©pendances Maven
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build project
        run: |
          cd back
          mvn clean install

      # Analyser le projet avec sonarCloud
      - name: SonarCloud Scan
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          cd back
          mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
            -Dsonar.projectKey=Arthurl35_Gerez-un-projet-collaboratif-en-int-grant-une-demarche-CI-CD_back \
            -Dsonar.organization=arthurl35 \
            -Dsonar.sources=src/main \
            -Dsonar.exclusions=src/main/resources/static/** \
            -Dsonar.tests=src/test \
            -Dsonar.javascript.lcov.reportPaths=../front/coverage/bobapp/lcov.info \
            -Dsonar.java.binaries=target/classes \
            -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml \
            -Dsonar.sourceEncoding=UTF-8 \
            -Dsonar.branch.name=main



  docker-build-push:
    name: Build and Push Docker Image for Backend
    runs-on: ubuntu-latest
    needs: [ backend-SonarCloud ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Configuration de la connexion √† Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Envoyer l'image Docker
      - name: Build and push backend Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./back
          file: ./back/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/bobapp-backend:latest

